<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Familiar extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Familiar_model');
    } 

    /*
     * Listing of familiar
     */
    //function index()
    //{
    //    $data['familiar'] = $this->Familiar_model->get_all_familiar();
    //    $tit['titulo1'] = "Famiiares";
    //    $tit['titulo2'] = "";
    //    $this->load->view('encabezadomenu');
    //    $this->load->view('encabezadomenu2',$tit);
    //    $this->load->view('subencabezado');
    //    $this->load->view('familiar/index',$data);
    //    $this->load->view('encabezadomenu3');
    //}
	
	function index($idpaciente)
    {
        $query          = "SELECT nombrepaciente, apellidopaciente FROM paciente WHERE idpaciente = ".$idpaciente." LIMIT 1";
        $consulta = $this->db->query($query);
        $fila = $consulta->row();
	$data['familiar']   = $this->Familiar_model->get_familiar_paciente($idpaciente);
        $tit['titulo1']    = "Familiares";
    	$tit['titulo2']    = " Paciente: ".$fila->nombrepaciente." ".$fila->apellidopaciente;
        $tit['elpaciente'] = $idpaciente;
        $this->load->view('encabezadomenu');
        $this->load->view('encabezadomenu2',$tit);
        $this->load->view('subencabezado');
        $this->load->view('familiar/index',$data);
        $this->load->view('encabezadomenu3');
    }

    /*
     * Adding a new familiar
     */
    function add($idpaciente)
    {   
         $query         = "SELECT nombrepaciente, apellidopaciente FROM paciente WHERE idpaciente = ".$idpaciente." LIMIT 1";
        $consulta       = $this->db->query($query);
        $fila           = $consulta->row();
        $data['familiar'] = $idpaciente;
        $tit['titulo1'] = "Familiares";
        $tit['titulo2'] = "Paciente ".$fila->nombrepaciente." ".$fila->apellidopaciente;
        $tit['elpaciente'] = $idpaciente;
        $this->load->view('encabezadomenu');
        $this->load->view('encabezadomenu2',$tit);
        $this->load->view('subencabezado');
        
        $this->load->library('form_validation');

        $this->form_validation->set_rules('idpaciente','Idpaciente','required|integer');
        $this->form_validation->set_rules('nombrefam','Nombre','required|max_length[45]');
        $this->form_validation->set_rules('apellidofam','Apellido','required|max_length[45]');
        $this->form_validation->set_rules('fechanacfam','Fecha de Nacimiento','required');
        $this->form_validation->set_rules('lugarnacfam','Lugar de Nacimiento','max_length[255]');
        $this->form_validation->set_rules('idniveleducativo','Nivel Educativo','integer');
        $this->form_validation->set_rules('ocupacion','Ocupacion','max_length[100]');
        $this->form_validation->set_rules('telefonoubicfam','Telefono','max_length[20]');
        $this->form_validation->set_rules('telefonocelfam','Telefono Celular','max_length[20]');
        $this->form_validation->set_rules('emailfam','Correo ','max_length[45]|valid_email');
        $this->form_validation->set_rules('idtipofamiliar','Nexo Familiar','required|integer');
		
        if($this->form_validation->run())     
        {   
            $params = array(
				'idpaciente' => $this->input->post('idpaciente'),
				'nombrefam' => $this->input->post('nombrefam'),
				'apellidofam' => $this->input->post('apellidofam'),
				'fechanacfam' => $this->input->post('fechanacfam'),
				'lugarnacfam' => $this->input->post('lugarnacfam'),
				'idniveleducativo' => $this->input->post('idniveleducativo'),
				'ocupacion' => $this->input->post('ocupacion'),
				'direccionfam' => $this->input->post('direccionfam'),
				'telefonoubicfam' => $this->input->post('telefonoubicfam'),
				'telefonocelfam' => $this->input->post('telefonocelfam'),
				'emailfam' => $this->input->post('emailfam'),
				'idtipofamiliar' => $this->input->post('idtipofamiliar'),
				'observaciones' => $this->input->post('observaciones'),
            );
            
            $familiar_id = $this->Familiar_model->add_familiar($params);
            redirect('paciente/index/');
           
        }
        else
        {
            $this->load->view('familiar/add',$tit);
        }
         $this->load->view('encabezadomenu3');
    }  
    
    /*
     * Editing a familiar
     */
    function edit($idfamiliar)
    {   
        // check if the familiar exists before trying to edit it
        $familiar = $this->Familiar_model->get_familiar($idfamiliar);
        
        $tit['titulo1']     = "Familiares";
    	$tit['titulo2']     = "Datos del Familiar";
        $tit['elpaciente']  = $familiar['idpaciente'];
        $this->load->view('encabezadomenu');
        $this->load->view('encabezadomenu2',$tit);
        $this->load->view('subencabezado');
        
        if(isset($familiar['idfamiliar']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('idpaciente','Idpaciente','required|integer');
            $this->form_validation->set_rules('nombrefam','Nombre ','required|max_length[45]');
            $this->form_validation->set_rules('apellidofam','Apellido ','required|max_length[45]');
            $this->form_validation->set_rules('fechanacfam','Fecha de Nacimiento','required');
            $this->form_validation->set_rules('lugarnacfam','Lugar de Nacimiento ','max_length[255]');
            $this->form_validation->set_rules('idniveleducativo','Nivel Educativo ','integer');
            $this->form_validation->set_rules('ocupacion','Ocupacion ','max_length[100]');
            $this->form_validation->set_rules('telefonoubicfam','Telefono ','max_length[20]');
            $this->form_validation->set_rules('telefonocelfam','Telefono Celular ','max_length[20]');
            $this->form_validation->set_rules('emailfam','Correo ','max_length[45]|valid_email');
            $this->form_validation->set_rules('idtipofamiliar','Nexo Familiar','required|integer');

            if($this->form_validation->run())     
            {   
                $params = array(
					'idpaciente' => $this->input->post('idpaciente'),
					'nombrefam' => $this->input->post('nombrefam'),
					'apellidofam' => $this->input->post('apellidofam'),
					'fechanacfam' => $this->input->post('fechanacfam'),
					'lugarnacfam' => $this->input->post('lugarnacfam'),
					'idniveleducativo' => $this->input->post('idniveleducativo'),
					'ocupacion' => $this->input->post('ocupacion'),
					'direccionfam' => $this->input->post('direccionfam'),
					'telefonoubicfam' => $this->input->post('telefonoubicfam'),
					'telefonocelfam' => $this->input->post('telefonocelfam'),
					'emailfam' => $this->input->post('emailfam'),
					'idtipofamiliar' => $this->input->post('idtipofamiliar'),
					'observaciones' => $this->input->post('observaciones'),
            );

                $this->Familiar_model->update_familiar($idfamiliar,$params);            
                redirect('familiar/index');
            }
            else
            {   
                $data['familiar'] = $this->Familiar_model->get_familiar($idfamiliar);
    
                $this->load->view('familiar/edit',$data);
            }
        }
        else
            $this->load->view('familiar/add');
            //show_error('The familiar you are trying to edit does not exist.');
        $this->load->view('encabezadomenu3');
    } 

    /*
     * Deleting familiar
     */
    function remove($idfamiliar)
    {
        $familiar = $this->Familiar_model->get_familiar($idfamiliar);

        // check if the familiar exists before trying to delete it
        if(isset($familiar['idfamiliar']))
        {
            $this->Familiar_model->delete_familiar($idfamiliar);
            redirect('familiar/index');
        }
        else
            show_error('The familiar you are trying to delete does not exist.');
    }
    
}
